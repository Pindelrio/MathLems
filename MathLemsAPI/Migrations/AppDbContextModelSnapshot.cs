// <auto-generated />
using System;
using MathLemsAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MathLemsAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("MathLems.Framework.Models.Answer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ProblemId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProblemId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("MathLems.Framework.Models.Avatar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Avatars");
                });

            modelBuilder.Entity("MathLems.Framework.Models.Gameplay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Gameplays");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9df93dfa-2a9d-4dad-803d-8e7cebbad587"),
                            Name = "Suma"
                        });
                });

            modelBuilder.Entity("MathLems.Framework.Models.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Flag")
                        .HasColumnType("TEXT");

                    b.Property<string>("IsoCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2f2f7327-89d5-442d-9e71-b4ce1dda41ba"),
                            IsoCode = "ca",
                            Name = "Català"
                        },
                        new
                        {
                            Id = new Guid("5857d9d7-597a-469d-b549-6cbe64ce1b69"),
                            IsoCode = "en",
                            Name = "English"
                        },
                        new
                        {
                            Id = new Guid("275f2b2a-972a-451c-9413-084277efedca"),
                            IsoCode = "es",
                            Name = "Español"
                        });
                });

            modelBuilder.Entity("MathLems.Framework.Models.Level", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Levels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5f4b73be-f62d-45f3-b58b-6a6bfbbc992b"),
                            Description = "Easy",
                            Name = "Level 1"
                        },
                        new
                        {
                            Id = new Guid("6de8f640-eccc-44fa-ad9f-2f2b42d3290a"),
                            Description = "Medium",
                            Name = "Level 2"
                        },
                        new
                        {
                            Id = new Guid("865e054e-e558-4d7f-82cf-7d5cd62d1187"),
                            Description = "Hard",
                            Name = "Level 3"
                        });
                });

            modelBuilder.Entity("MathLems.Framework.Models.Problem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GamePlayId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LevelId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Operation")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Statement")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GamePlayId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LevelId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Problems");
                });

            modelBuilder.Entity("MathLems.Framework.Models.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3246a860-8271-403c-884a-11fe6a904b37"),
                            Name = "Què és el que et demana el problema?"
                        });
                });

            modelBuilder.Entity("MathLems.Framework.Models.Settings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AvatarId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Lives")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AvatarId");

                    b.HasIndex("LanguageId");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("MathLems.Framework.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SettingsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SettingsId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MathLems.Framework.Models.Answer", b =>
                {
                    b.HasOne("MathLems.Framework.Models.Problem", null)
                        .WithMany("Answers")
                        .HasForeignKey("ProblemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MathLems.Framework.Models.Problem", b =>
                {
                    b.HasOne("MathLems.Framework.Models.Gameplay", "Gameplay")
                        .WithMany()
                        .HasForeignKey("GamePlayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MathLems.Framework.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MathLems.Framework.Models.Level", "Level")
                        .WithMany()
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MathLems.Framework.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gameplay");

                    b.Navigation("Language");

                    b.Navigation("Level");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("MathLems.Framework.Models.Settings", b =>
                {
                    b.HasOne("MathLems.Framework.Models.Avatar", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MathLems.Framework.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avatar");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("MathLems.Framework.Models.User", b =>
                {
                    b.HasOne("MathLems.Framework.Models.Settings", null)
                        .WithOne("User")
                        .HasForeignKey("MathLems.Framework.Models.User", "SettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MathLems.Framework.Models.Problem", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("MathLems.Framework.Models.Settings", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
